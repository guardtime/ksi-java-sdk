Version 4.19

* IMPROVEMENT: Changed BouncyCastle version to 1.78.1.
* IMPROVEMENT: Changed mina-core version to 2.1.8.
* IMPROVEMENT: Changed httpasyncclient version to 4.1.5.

Version 4.18

2022-01-11 4.18.217

* IMPROVEMENT: Android support.
* IMPROVEMENT: Changed mina-core version to 2.1.5.

Version 4.17

2021-04-28 4.17.213

* IMPROVEMENT: Removed support for Java 7.
* IMPROVEMENT: Changed BouncyCastle version to 1.68.
* IMPROVEMENT: Changed commons-io version to 2.7.

Version 4.16

2020-07-02 4.16.205

* FEATURE: Add support for building canonical Merkle trees.
* IMPROVEMENT: Changed BouncyCastle version to 1.65.

Version 4.15

2019-10-24 4.15.198

* BUGFIX: BlindingMaskLinkingHashTreeBuilder now checks previous block hash existence.
* BUGFIX: Fixed a bug where chain index existence was not verified during signature parsing.
* BUGFIX: BlindingMaskLinkingHashTreeBuilder is now internally using provided hashing algorithm.
* IMPROVEMENT: Verification error code KEY-01 is now deprecated, certificate existence rule now returns GEN-02 instead of KEY-01.
* IMPROVEMENT: Removed PDU V1 support.
* IMPROVEMENT: BlindingMaskLinkingHashTreeBuilder no longer throws exception but instead logs warning if IV is shorter than the output of the hash algorithm.

Version 4.14

2019-04-18 4.14.193

* BUGFIX: Fixed a bug where ContextAwarePolicyAdapter didn't set a fallback policy.
* BUGFIX: Fixed a bug where KSISignatureVerifier ignored the context of the ContextAwarePolicyAdapter fallback policy.
* BUGFIX: Fixed a bug where ContextAwarePolicyAdapter allowed to set a fallback policy without specifying the verification context.
* BUGFIX: Fixed a bug where wrong methods were used for getting the aggregation time in some verification rules.

Version 4.13

2019-04-11 4.13.187

* FEATURE: Add support for a hash tree builder that uses blinding masks.
* IMPROVEMENT: All errors that occur during the verification process while fetching a resource (e.g extender, publications file) are caught and "mapped" to the NA verification result.

Version 4.12

2018-09-14 4.12.181

* FEATURE: Add support for receiving pushed aggregator/extender configuration updates.
* FEATURE: Create a signature by prepending a lower aggregation hash chain to an existing signature.
* FEATURE: Add AggregationHashChainBuilder to extract aggregation hash chains from leaf nodes
* IMPROVEMENT: Separated extender and signer settings in tests and properties.
* IMPROVEMENT: Added convenience methods for creating TLVElement and setting its content.
* IMPROVEMENT: For aggregation and extension requests take HMAC algorithm from credentials.
* IMPROVEMENT: Add option to set HMAC algorithm that is used in tests via integrationtest.properties.
* IMPROVEMENT: Verify calendar hash chain consistency when extending a signature
* IMPROVEMENT: Add option to supply metadata together with leaf node when using TreeBuilder
* BUGFIX: KSI close now closes publications client/service.
* BUGFIX: Tests are now closing services, clients and KSI.
* BUGFIX: Hash data imprint when hashing DataHash object.

Version 4.11

2018-01-09 4.11.153

* FEATURE: Now Possible to extend with TCPClient. Also possible to initialize SigingTCPClient and ExtenderTCPClient separately. Deprecated TCPClient(TCPClientSettings) constructor.
* IMPROVEMENT: Added support for Java 9. Removed support for Java 5 and Java 6.
* IMPROVEMENT: Removed old deprecated methods.
* IMPROVEMENT: Added default verification policy and default context aware verification policy.
* IMPROVEMENT: BlockSigner returns signature in the same order as the data hashes were added to queue.
* IMPROVEMENT: Blocksigner only adds user provided metadata.
* IMPROVEMENT: Handling of deprecated and obsolete hash functions, SHA-1 is marked as deprecated and not trusted.
* IMPROVEMENT: Added hash level to signing interface.
* IMPROVEMENT: The RFC3161 compatibility record output hash algorithm deprecated verification rule.
* IMPROVEMENT: Verification of the validity of the signing certificate during aggregation time.
* IMPROVEMENT: Adjusted publication based, key based and internal verification policies.
* IMPROVEMENT: Default executor service thread pool size is configurable.
* IMPROVEMENT: Upgraded Jacoco dependency from version dependency 0.7.5.201505241946 to 0.7.9
* IMPROVEMENT: Upgraded maven-javadoc-plugin plugin dependency from version 2.10.3 to 3.0.0-M1
* IMPROVEMENT: Upgraded maven-source-plugin plugin dependency from version  2.4 to 3.0.1
* IMPROVEMENT: Upgraded maven-jar-plugin dependency plugin from version 2.6 to 3.0.2
* IMPROVEMENT: Test resource update.
* BUGFIX: Made extender optional for publication based verification policies.
* BUGFIX: Fixed test resource loading functionality.

Version 4.10

2017-12-18 4.10.119

* BUGFIX: CredentialsAwareHttpSettings is now using PDU V2 as default.
* BUGFIX: Removed complex HTTP client initializing option using sub-clients.

2017-08-31 4.10.117

* IMPROVEMENT: Added KSISigningService and KSIExtendingService which act as a more high level alternatives to KSISigningClient and KSIExtenderClient. Both clients can be converted to services via KSISigningClientServiceAdapter and KSIExtendingClientServiceAdapter.
* IMPROVEMENT: All the API components which used to be initializable with clients are now also initializable with services.
* IMPROVEMENT: Chain index continuation check in internal verification is done now earlier.
* IMPROVEMENT: Configuration requests in the KSI instance have been deprecated. Callback and Future based asynchronous configuration asking implemented to all the KSISigningServices and KSIExtenderServices.
* IMPROVEMENT: Deprecated VerificationContext.setPduFactory(PduFactory). Has no effect since PduFactory is defined in the KSIExtendingService level.
* IMPROVEMENT: HMAC algorithm check on incoming messages.
* IMPROVEMENT: Logging of unknown skipped PDUv2 responses.
* IMPROVEMENT: Now possible to verify input hash level, default value is 0, GEN-03 is returned in case of error.
* IMPROVEMENT: Renewed and cleaned test resources and improved test coverage.
* IMPROVEMENT: Set PDU version 2 as default PDU version.
* IMPROVEMENT: TCP client now uses only Apache MINAs concurrency mechanisms. Removed additional thread pool.
* FEATURE: HAService (High-availability service) is a service that combines multiple KSISigningServices and KSIExtenderServices to achieve redundancy.
* FEATURE: KSI interface refactoring into separate interfaces.
* BUGFIX: Removed addAggregationHashChain from KSISignature.
* BUGFIX: Removed registration time from KSISignature and CalendarHashChain.
* BUGFIX: RFC3161 record index rule code error code and messages corrected.
* BUGFIX: Signature type is no longer ignored in Calendar Authentication Records.
* BUGFIX: Verification error codes are unified.

Version 4.9

2017-04-05 4.9.95

* FEATURE: Aggregator and extender configuration requests

Version 4.8

2017-03-16 4.8.91

* BUGFIX: Fixed adding datahashes with not the same level value to BlockSigner.

2017-03-13 4.8.89

* BUGFIX: Fixed KsiBlockSigner maxTreeHeight validation.
* BUGFIX: Fixed SimpleHttpPostRequestFuture response handling when response body is empty

Version 4.7

2017-02-22 4.7.85

* IMPROVEMENT: Check, if given hash could be added to the BlockSigner without exceeding given tree height. BlockSigner interface changed, add method returns boolean instead of KsiBlockSigner.
* BUGFIX: Fixed KsiBlockSigner initialization without default hash algorithm.
* IMPROVEMENT: Updated signature verification procedure. Added new error codes.
* IMPROVEMENT: X509CertificateSubjectRdnSelector supports certificates with multi-valued RDN-s

Version 4.6

2016-12-15 4.6.80

* IMPROVEMENT: Now the Identity information is provided as an array in SDK. Old methods are deprecated. Moved class com.guardtime.ksi.unsiganture.IdentityMetadata to package com.guardtime.ksi.blocksigner.
* IMPROVEMENT: KsiBlockSigner performance improvements
* FEATURE: Removed multi-signature support

Version 4.5

2016-11-17 4.5.72

* IMPROVEMENT: HashTreeBuilder optimizations

2016-11-10 4.5.71

* FEATURE: Added a PDU v2 implementation.
* IMPROVEMENT: Replaced com.guardtime.ksi.service package in module ksi-api with com.guardtime.ksi.pdu package in ksi-service-client module.
* IMPROVEMENT: Added a KsiBlockSignerBuilder class. It is recommended to use this builder to create new instances of KsiBlockSigner.
* IMPROVEMENT: Improved RFC3161Record verification.
* IMPROVEMENT: Minor improvements.

Version 4.4

2016-10-10 4.4.67

* IMPROVEMENT: Now internal verification of the signature is performed in the following cases: new signature is created, existing signature is extended, signature is read from input stream.
* IMPROVEMENT: SHA1 hash algorithm status was changed from NOT_TRUSTED to NORMAL
* IMPROVEMENT: Improved user provided publication based verification policy
* BUGFIX: Fixed a typo in CAL-04 verification error text
* IMPROVEMENT: Replaced checked exceptions with runtime exception in DataHasher/DataHash/HashAlgorithm classes. 
* IMPROVEMENT: Method HashAlgorithm.getNamesList() was removed. Added a method with name HashAlgorithm.getImplementedHashAlgorithms()

Version 4.3

2016-09-12 4.3.55

* BUGFIX: Fixed a TCP client open file descriptors leak

2016-06-17 4.3.54

* IMPROVEMENT: Added stronger check for aggregation hash chain index consistency
* BUGFIX: Fixed a bug where server closed TCP connection due to inactivity and we did not close session in our side
* BUGFIX: Fixed a bug where TCP client had trouble splitting aggregator responses
* BUGFIX: Fixed a bug where TCP client CPU consumption didn't drop after high load
* IMPROVEMENT: Now publications file can be cached by using method KSIBuilder.setPublicationsFileCacheExpirationTime(..)
* BUGFIX: Fixed a bug where Calendar Hash Chain rule checked wrong links.
* FEATURE: Added support for local aggregation.

Version 4.2

2016-05-12 4.2.33

* BUGFIX: TCP Client will now open a new connection, the moment it realizes that the old one is closed.

2016-04-19 4.2.32

* IMPROVEMENT: Changed signature identity separator to <space>::<space>.
* BUGFIX: Removed SHA-224 hash algorithm. Added internal policy rule to check aggregation hash chain link legacyId content.
* BUGFIX: Removed KSI.asyncExtendToHead() and KSI.extendToHead() methods
* BUGFIX: Fixed a bug when a fallback policy succeeded but verification result contained error code.
* IMPROVEMENT: CommonKsiClient is now called KsiCredentialsAwareClient. KsiPublicationsFileClient does not extend it anymore.
* IMPROVEMENT: KsiCredentialsAwareClient, KsiPublicationsFileClient and KSI class itself all extend java.io.Closeable and so all of their close() methods now throw java.io.IOException.
* IMPROVEMENT: Updated slf4j version to 1.7.12. Now the scope of slf4j-simple is 'provided'.
* IMPROVEMENT: Added getType() method to Policy interface
* IMPROVEMENT: Added getPublicationRecords() method to PublicationsFile interface.
* IMPROVEMENT: Refactored HttpClientSettings class. Now AbstractHttpClientSettings class can be used to add different HTTP client settings implementations.
* IMPROVEMENT: Changed Jacoco version to 0.7.5.201505241946
* BUGFIX: Maven javadoc:javadoc target didn’t add overiview.html to javadoc.

Version 4.1

2016-02-04 4.1.18

* IMPROVEMENT: Publications file parsing and verification are now more strict.
* IMPROVEMENT: Improved ApacheHttpClient configuration.
* BUGFIX: Now the TLV8 and TLV16 flags are set automatically according to given content. Fixed TLV limits.
* IMPROVEMENT: Improved HTTP error PDU message processing
* IMPROVEMENT: HttpClientSettings class is extendable
* IMPROVEMENT: The response PDU MAC algorithm is selected from input imprint.
* IMPROVEMENT: Improved tests
* IMPROVEMENT: Added serial version UID constants to Exception classes
